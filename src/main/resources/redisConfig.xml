<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
			            http://www.springframework.org/schema/context
			            http://www.springframework.org/schema/context/spring-context-4.2.xsd
			            http://www.springframework.org/schema/mvc
			            http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
			            http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
			            http://mybatis.org/schema/mybatis-spring 
			            http://mybatis.org/schema/mybatis-spring.xsd ">

	<!-- redis config start -->
	<!-- 配置JedisPoolConfig实例 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>


	<!-- 配置JedisConnectionFactory -->
	<!-- 注释掉的JedisConnectionFactory是单个redis的情况 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="database" value="${redis.dbIndex}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<!-- RedisClusterConfiguration用于配置redis集群参数 -->
	<!-- <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration"> 
		<property name="maxRedirects" value="6"></property> <property name="clusterNodes"> 
		<set> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7000"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7001"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7002"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7003"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7004"></constructor-arg> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg> <constructor-arg 
		name="port" value="7005"></constructor-arg> </bean> </set> </property> </bean> -->


	<!-- JedisConnectionFactory配置redis集群 -->
	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
		<constructor-arg name="clusterConfig" ref="redisClusterConfig" /> <property 
		name="timeout" value="${redis.timeout}" /> <property name="poolConfig" ref="poolConfig" 
		/> </bean> -->
	<!-- 存储序列化 -->
	<!-- <bean name="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" 
		/> -->

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<!-- <property name="keySerializer" ref="stringRedisSerializer" /> <property 
			name="hashKeySerializer" ref="stringRedisSerializer" /> <property name="valueSerializer" 
			ref="stringRedisSerializer" /> <property name="hashValueSerializer" ref="stringRedisSerializer" 
			/> -->
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean>

	<!-- 配置RedisCacheConfig -->
	<bean id="redisCacheConfig" class="org.tton.hrm.config.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>
	<!-- redis config end -->
</beans>
